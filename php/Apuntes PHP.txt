En programación tenemos varios tipos de datos, los más conocidos son:


Numéricos:
Integer: Número sin decimales.
Float: Número con punto flotante o punto decimal.
Double: Decimales con valores más precisos, con más decimales que float.
Cadenas ded caracteres:
Chart: Un solo una letra o un simbolo.
String: Una cadena de caracteres.
Booleanos:
Bool: Verdadero o falso.
Sin valor:
Null: No hay valor.
Undefined: Hay una variable pero no tiene ningun valor.


PHP tiene un tipado débil, no necesita que se defina de forma explicita el tipo de dato ya que lo deduce por si mismo.


PHP es capaz de convertir de un tipo a otro de forma automática. Por ejemplo si sumas un número con un string PHP evaluará ambos como números.


Operadores Aritméticos
Adición ⇒ +
Sustracción ⇒ -
Multiplicación ⇒ *
División ⇒ /
Modulo ⇒ % ⇒ Se usa para conocer el residuo de una división ⇒ $a % $b
Potenciación ⇒ ** ⇒ $a ** $b
Identidad ⇒ Sirve para convertir un string a un int o float, según sea el caso ⇒ + ⇒ +$a
Negación ⇒ Convierte un numero positivo a negativo ⇒ -$a


Operadores Relacionales
Igual, ==
No compara tipos, solo valores


Se denota con   ==


$a == $b
Idéntico, ===
Compara tipos y valores


Se denota con ===
Diferentes, ! =, ! ==
! = , no compara tipos,


! ==, compara tipos y valores,
Menor que, <
$a < $b
Mayor que, >
$a > $b
Mayor o Igual que, > =
$a ≥ $b
Menor o Igual que, < =
$a < = $b
Operador de Nave Espacial, < = >
<?php
        echo 2 <=> 1;
        echo "\n";


echo 2 <=> 1; // 1
echo 1 <=> 1; // 0
echo -50 <=> 1 //
Si el numero de la izquierda es mayor el numero de la derecha, el resultado será 1
Si el numero de la derecha es igual que el numero de la izquierda , el resultado será 0
Si el numero de la izquierda es menor que el numero de la derecha, el resultado será 1
Fusión de Null, ??
$edad_pepito = 23;


echo $edad_juanito ?? edad_pepito; 
// Si la edad de Juanito no esta definida, usa la edad de pepito


echo "\n";


Otros operadores
Operador        Descripción
=        Asignación
+=        Incremento
++        Incremento
-=        Decremento
--        Decremento
*=        Multiplicación
/=        División
.=        Concatenación
El operador de Asignación, representado por el signo =, se usa para indicar al intérprete que un determinado identificador deberá apuntar a un valor en memoria.


$estatura = 1.65;
$talla = "XS";
$instrumento = "Bambuco";
El operador de Incremento, representado por la secuencia +=, se usa para simplificar la asignación de una adición sobre la misma variable.


$index = 0;
$index += 10;  // Equivale a la sentencia '$index = $index + 10;'
El operador de Incremento unitario, representado por la secuencia ++, se usa para simplificar la asignación de una adición unitaria sobre la misma variable. Sin embargo, si el operador se encuentra a la izquierda de la variable, se considera Pre-incremento (Incrementa en uno, y luego retorna el valor); y si el operador se encuentra a la derecha de la variable, se considera Post-incremento (Retorna el valor, y luego lo incrementa en uno).


$length = 6;
$length++;  // Equivale a la sentencia '$length = $length + 1;'
El operador de Decremento, representado por la secuencia -=, se usa para simplificar la asignación de una sustracción sobre la misma variable.


$juegos = 335;
$juegos -= 20;  // Equivale a la sentencia '$juegos = $juegos - 20;'
El operador de Decremento unitario, representado por la secuencia --, se usa para simplificar la asignación de una sustracción unitaria sobre la misma variable. Sin embargo, si el operador se encuentra a la izquierda de la variable, se considera Pre-decremento (Reduce en uno, y luego retorna el valor); y si el operador se encuentra a la derecha de la variable, se considera Post-decremento (Retorna el valor, y luego lo reduce en uno).


$peces = 15;
$peces--;  // Equivale a la sentencia '$peces = $peces - 1;'
El operador de Multiplicación, representado por la secuencia *=, se usa para simplificar la asignación de una multiplicación sobre la misma variable.


$casas = 3;
$casas *= 3;  // Equivale a la sentencia '$casas = $casas * 3;'
El operador de División, representado por la secuencia /=, se usa para simplificar la asignación de una división sobre la misma variable.


$cupcakes = 25;
$cupcakes /= 5;  // Equivale a la sentencia '$cupcakes = $cupcakes / 5;'
El operador de Concatenación, representado por la secuencia .=, se usa para simplificar la asignación de una concatenación sobre la misma variable.


$nombre = "Blanca";
$nombre .= " Nieves";  // Equivale a la sentencia '$nombre = $nombre . " Nieves";'